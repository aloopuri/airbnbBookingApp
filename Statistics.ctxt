#BlueJ class context
comment0.target=Statistics
comment0.text=\r\n\ This\ class\ contains\ all\ the\ statistics\ used\ in\ the\ statistics\ panel\r\n\r\n\ @author\ (your\ name)\r\n\ @version\ (a\ version\ number\ or\ a\ date)\r\n
comment1.params=listings
comment1.target=Statistics(java.util.ArrayList)
comment1.text=\r\n\ Constructor\ for\ objects\ of\ class\ Statistics\r\n
comment10.params=boroughName
comment10.target=javafx.collections.ObservableList\ getRoomTypeDistribution(java.lang.String)
comment10.text=\r\n\ Calculates\ the\ number\ of\ different\ types\ of\ rooms\ and\ creates\ them\ as\ a\ bar\ to\ be\r\n\ part\ of\ a\ bar\ chart\r\n
comment11.params=boroughName
comment11.target=javafx.collections.ObservableList\ getAvailDistribution(java.lang.String)
comment11.text=\r\n\ Calculates\ the\ availability\ of\ properties\ in\ a\ borough\ and\ categorises\ them\r\n\ into\ 4\ bars,\ 0-99,\ 100-99,\ 200-299,\ and\ 300+\r\n\ It\ then\ turns\ them\ into\ bars\ to\ be\ used\ to\ form\ a\ bar\ chart\r\n
comment12.params=type\ typeCount
comment12.target=javafx.scene.chart.XYChart.Series\ addSeries(java.lang.String,\ int)
comment12.text=\r\n\ Creates\ a\ series\ for\ a\ barchart\ and\ sets\ the\ name\ of\ the\ series\ as\ type\r\n
comment13.params=boroughName
comment13.target=java.util.ArrayList\ getBoroughListings(java.lang.String)
comment13.text=\r\n\ Filters\ a\ list\ by\ a\ borough\ passed\ in\ and\ then\ sorts\ its\ by\ room\ type\ \r\n\ in\ alphabetical\ order\r\n
comment14.params=boroughName
comment14.target=java.util.ArrayList\ mostPopListType(java.lang.String)
comment14.text=\r\n\ This\ creates\ an\ and\ returns\ an\ arraylist\ containing\ the\ common\ features\r\n\ between\ the\ top\ 5\ properties\ in\ a\ borough\r\n
comment15.params=listings
comment15.target=java.util.ArrayList\ getTopListings(java.util.ArrayList)
comment15.text=\r\n\ Returns\ an\ arraylist\ of\ the\ top\ 5\ listings\ \r\n\ If\ the\ list\ passed\ in\ has\ less\ than\ 5\ listings,\ it\ returns\ the\ list\r\n
comment16.params=listing
comment16.target=java.util.List\ sortByBoroughAndRoom(java.util.List)
comment16.text=\r\n\ Sorts\ a\ list\ by\ Neighbourhood\ first\ and\ then\ room\ type\r\n
comment17.params=
comment17.target=double\ getAvgNumOfReviews()
comment17.text=\r\n\ Returns\ the\ average\ number\ of\ reviews\r\n
comment18.params=
comment18.target=java.lang.String\ getAvgNumOfReviewsString()
comment18.text=\r\n\ Returns\ the\ average\ number\ of\ reviews\ as\ a\ string\ to\ 2\ decimal\ places\r\n
comment19.params=
comment19.target=int\ getTotalAvailProperties()
comment19.text=\r\n\ Returns\ the\ total\ number\ of\ available\ properties\r\n
comment2.params=listings
comment2.target=void\ updateStatistics(java.util.ArrayList)
comment2.text=\r\n\ Updates\ the\ statistics\ \r\n
comment20.params=
comment20.target=java.lang.String\ getTotalAvailPropertiesString()
comment20.text=\r\n\ Returns\ the\ total\ number\ of\ available\ properties\ as\ a\ string\r\n
comment21.params=
comment21.target=int\ getNumOfHomesAndApts()
comment21.text=\r\n\ Returns\ the\ number\ of\ homes\ and\ apartments\r\n
comment22.params=
comment22.target=java.lang.String\ getNumOfHomesAndAptsString()
comment22.text=\r\n\ Returns\ the\ number\ of\ homes\ and\ apartments\ as\ a\ string\r\n
comment23.params=
comment23.target=java.lang.String\ getMostExpBorough()
comment23.text=\r\n\ Returns\ the\ most\ expensive\ borough\r\n
comment3.params=
comment3.target=void\ resetStatistics()
comment3.text=\r\n\ Resets\ all\ the\ statistics\r\n
comment4.params=
comment4.target=void\ AvgNumOfReviews()
comment4.text=\r\n\ Calculates\ the\ average\ number\ of\ reviews\r\n
comment5.params=
comment5.target=void\ totalAvailProperties()
comment5.text=\r\n\ Calculates\ the\ total\ number\ of\ available\ properties\ where\ the\ availability\ is\r\n\ greater\ than\ zero\r\n
comment6.params=
comment6.target=void\ numOfHomesAndApts()
comment6.text=\r\n\ Calculates\ the\ number\ of\ Homes\ and\ Apartments\r\n
comment7.params=
comment7.target=void\ mostExpensiveBorough()
comment7.text=\r\n\ Finds\ the\ most\ expensive\ borough\r\n
comment8.params=
comment8.target=void\ propertiesInEachBorough()
comment8.text=\r\n\ Calculates\ the\ number\ of\ properties\ in\ borough\r\n
comment9.params=
comment9.target=javafx.collections.ObservableList\ getpropertiesInEachBorough()
comment9.text=\r\n\ Returns\ a\ list\ of\ data\ containing\ the\ number\ of\ properties\ in\ a\ borough\r\n
numComments=24
